@using AdminHalloDoc.Models.CV;
@using static AdminHalloDoc.Entities.ViewModel.Constant;
@model AdminHalloDoc.Entities.ViewModel.AdminViewModel.Physicians;
@{
    ViewData["Title"] = "Physician";
    var enumData = from AdminStatus e in Enum.GetValues(typeof(AdminStatus))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };

    var status = "null";
    if (TempData["Status"] == null)
    {
        status = "null";
    }
    else
    {
        status = TempData["Status"].ToString();

    }
}
@{
    string disable = Model == null ? "disabled" : "";
}

<div class="container">
    <div class="justify-content-between d-flex container-fluid mb-3 position-relative ">
        <div class="">
            <h1>
                @ViewData["PhysicianAccount"] Physician Account
            </h1>
        </div>
        <div>
            <a href="javascript:void(0)" onclick="goBack()" class="btn btn-outline-info"> ❮  Back </a>
        </div>
    </div>
    <div class="card border-0 shadow p-4 mb-5  rounded">
        <form id="addedit" class="row g-3" asp-action="PhysicianAddEdit" asp-controller="Physician" enctype="multipart/form-data" >

            <input id="123" type="hidden"  asp-for="Physicianid" />
            <div class="justify-content-between d-flex container-fluid mb-5 position-relative ">
                <div>
                <h4 class=" my-4">Account Information</h4>

                </div>
                <div>
                    @if (Model != null && Model.Physicianid == Convert.ToInt32(CV.UserID()))
                    {

                        <a class="btn  btn-info text-white btn-submit my-4" onclick="blackshow()" data-bs-toggle="modal" data-bs-target="#reqToAdminmodal">
                                Request To Admin
                            </a>
                           
                    }
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="UserName" class="form-control form-control-disable rounded asp" name="UserName" type="text">
                <label class="" for="floatingInput">User Name </label>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating">
                <input class="form-control rounded asp" asp-for="PassWord" name="Password" type="password" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Password </label>
                <span asp-validation-for="PassWord" class="text-danger"></span>

            </div>
            @{
            if(Model != null && Model.Physicianid != Convert.ToInt32(CV.UserID()) ){
                <div class="col-md-6 form-floating">
                    <select class="form-select form-select-md form-control-disable p-2 asp" required name="Status" asp-for="Status" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="region2" asp-items="@(new SelectList(enumData, "ID", "Name"))" data-control="select2" data-placeholder="Select Level">
                    </select>
                </div>
                <div class="col-md-6 form-floating">
                    <select class="form-select form-select-md  form-control-disable p-2 asp" required name="Roleid" asp-for="Roleid" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="roles" asp-items="@(new SelectList(ViewBag.userrolecombobox,"RoleId","RoleName"))" data-control="select2" data-placeholder="Select Level">
                    </select>
                </div>
                <div class="text-end editable edits" style="display:none">
                    <button type="submit" asp-action="SavePhysicianInfo" asp-controller="Physician" class="btn-info btn" id="saveasp" style="display:none">Save</button>
                    <div class="btn btn-info" id="editasp">edit</div>
                    <button class="text-end btn btn-outline-info " asp-action="ResetPassAdmin" asp-controller="Physician" id="submitresetpass">Reset Password</button>
                </div>
            }
             else if(Model == null ){
                  <div class="col-md-6 form-floating">
                    <select class="form-select form-select-md  form-control-disable p-2 asp" required name="Roleid" asp-for="Roleid" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="roles" asp-items="@(new SelectList(ViewBag.userrolecombobox,"RoleId","RoleName"))" data-control="select2" data-placeholder="Select Level">
                    </select>
                </div>
            }
            else
            {
                <div class="text-end editable edits" style="display:none">
                    <button class="text-end btn btn-outline-info " asp-action="ResetPassAdmin" asp-controller="Physician" id="submitresetpass">Reset Password</button>
                </div>
            }
            }

           
        

        <h4 class=" my-4"> Physician Information</h4>

            <input type="hidden" asp-for="Physicianid" />
            <div class="col-md-6 form-floating  ">
                <input asp-for="Firstname" class="form-control form-control-disable rounded admin-input" name="Firstname" type="text" placeholder="First Name" autocomplete=off>
                <label class="" for="floatingInput">First Name </label>
                <span asp-validation-for="Firstname" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Lastname" class="form-control form-control-disable rounded admin-input" name="Lastname" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Last name </label>
                <span asp-validation-for="Lastname" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Email" class="form-control form-control-disable  rounded admin-input" id="email" name="Email" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Email </label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Mobile" id="phone" type="tel" name="Mobile" class="form-control form-control-disable rounded admin-input" autocomplete=off>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Medicallicense" class="form-control form-control-disable rounded admin-input" name="Medicallicense" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Medical License </label>
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Npinumber" class="form-control form-control-disable rounded admin-input" name="Npinumber" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">NPI Number </label>
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Syncemailaddress" class="form-control form-control-disable rounded admin-input" name="Syncemailaddress" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Synce mail address</label>
            </div>

            <input asp-for="Regionsid" type="hidden" id="regionids" />
            <div class="col-md-6 d-flex">

                @foreach (var cb in ViewBag.RegionComboBox)
                {

                    @if (Model != null && Model.Regionids != null && Model.Regionids.Count > 0 && Model.Regionids.Exists(id => id.regionid == cb.RegionId))
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input regionbox admin-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault" checked>
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input regionbox admin-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }

                }
                </div>
            @if (Model != null && Model.Physicianid != Convert.ToInt32(CV.UserID()))
            {
                <div class="text-end edits">

                    <a onclick="enable_disable_administration()" id="admin-input-edit" class="btn  btn-info text-white btn-submit ">
                        Edit
                    </a>
                    <button type="submit" asp-action="EditAdminInfo" asp-controller="Physician" id="save-admindata" class="btn   btn-outline-info btn-submit mx-2 ">
                        save
                    </button>
                    <a id="cancel-admindata" class="btn  btn-outline-danger ">
                        cancel
                    </a>

                </div>
            }
            <script>

                 
                </script>
            
        <h4 class=" my-4">Mailing & Billing  Information</h4>

       
            <input type="hidden" asp-for="Physicianid" />
            <div class="col-md-6 form-floating ">
                <input asp-for="Address1" class="form-control form-control-disable rounded mail-billing-imp" name="Address1" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address1 </label>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="Address2" class="form-control form-control-disable rounded mail-billing-imp" name="Address2" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address2 </label>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="City" class="form-control form-control-disable rounded mail-billing-imp" name="City" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">City</label>
            </div>
            <div class="col-md-6 form-floating ">
                <select class="form-select form-select-md mt-3 p-2 mail-billing-imp" asp-for="Regionid" name="Regionid" data-allow-clear="true" tabindex="-1" asp-items="@(new SelectList(ViewBag.RegionComboBox,"RegionId","RegionName"))" data-control="select2" data-placeholder="Select Level">
                </select>
                <label for="floatingInput">State</label>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Zipcode" class="form-control form-control-disable rounded mail-billing-imp" name="Zipcode" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Zip Code</label>
            </div>
            <div class="col-md-6 form-floating  my-1">
                <input asp-for="Altphone" id="phone1" type="tel" name="Altphone" class="form-control form-control-disable rounded mail-billing-imp" autocomplete=off>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>
            @if (Model != null && Model.Physicianid != Convert.ToInt32(CV.UserID()))
            {
                <div class="text-end edits">
                    <a onclick="enable_disable_mailBilling()" id="edit-mail-billing" class="btn text-white  btn-info btn-submit ">
                    Edit
                </a>
                <button type="submit" id="save-mail-billing" asp-action="EditMailBilling" asp-controller="Physician" class="btn  btn-outline-info btn-submit mx-2 ">
                    save
                </button>
                <a id="cancel-mail-billing" class="btn  btn-outline-danger ">
                    cancel
                </a>
            </div>
            }
            <script>

            </script>
       

        <h4 class=" my-4">Provider Profile</h4>

            <input type="hidden" asp-for="Physicianid" />
            <div class="col-md-6 form-floating ">
                <input asp-for="Businessname" class="form-control form-control-disable rounded provider-prof" name="Businessname" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Business Name </label>
                <span asp-validation-for="Businessname" class="text-danger"></span>

            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="Businesswebsite" class="form-control form-control-disable rounded provider-prof" name="Businesswebsite" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Business Website </label>
                <span asp-validation-for="Businesswebsite" class="text-danger"></span>

            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="PhotoFile"  class="form-control form-control-disable rounded provider-prof file-upload-wrapper-1" name="PhotoFile" type="file" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Photo</label>
            </div>
            <div class="col-md-6 form-floating d-flex">
                <input asp-for="SignatureFile" id="signature-file" class="form-control form-control-disable rounded provider-prof file-upload-wrapper-1" name="SignatureFile" type="file" placeholder=Suchtext autocomplete=off>
                <button class="btn btn-info mx-1 text-white" type="button" id="create-signature-button">Create</button>
                <label for="floatingInput">Signature</label>
              
            </div>
            <div class="col-md-6" >
                @if(Model != null && Model.Photo != null){
                    <span> Photo  </span>
                        <img class="img-fluid border border-1 mx-2" style="height:150px;" src="~/Upload/Physician/@Model.Physicianid/@Model.Photo" alt="Photo" />
                }
            </div>
            <div class="col-md-6">
                <div>
                    @if (Model != null && Model.Signature != null)
                    {
                        <span> Signature  </span>
                        <img class="img-fluid border border-1 mx-2" src="~/Upload/Physician/@Model.Physicianid/@Model.Signature" alt="Signature" />
                    }
                        <input type="hidden" id="signature-data" name="signatureData">
                </div>
                <div class=" d-flex">
                    <img id="saved" alt="Signature" class="border border-1 border-success-subtle mx-3" style="display:none;" />
                    <canvas id="signature-pad" width="300" height="200" style="display:none;"></canvas>
                    
                </div>
                <div class="text-end mt-2" >
                    <div id="clear-button" class="btn btn-danger mt-0" style="display:none;">Clear</div>
                    <div id="save-button" class="btn btn-success" style="display:none;" disabled>Save</div>
                </div>
                
            </div>
            <div class="col-md-12 form-floating ">
                <textarea asp-for="Adminnotes" name="Adminnotes" class="form-control form-control-disable provider-prof" rows="10" cols="100"></textarea>
                <label for="floatingInput">Adminnotes</label>
            </div>
            @if (Model != null && Model.Physicianid != Convert.ToInt32(CV.UserID()))
            {
                <div class="text-end mt-2 edits">
                    <a id="edit-provider-prof" class="btn  btn-outline-info btn-submit ">
                    Edit
                </a>
                <button type="submit" asp-action="EditProviderProfile" asp-controller="Physician" id="save-provider-prof" class="btn  btn-outline-info btn-submit mx-2 ">
                    save
                </button>
                <div id="cancel-provider-prof" class="btn  btn-outline-danger ">
                    cancel
                </div>
            </div>
            }
            <script>

            </script>

        
        <hr />
            <h4 class=" my-2">Onbording </h4>


            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-check mx-2">
                            <input class="form-check-input agreement-checkbox not-show" asp-for="Isagreementdoc" name="Isagreementdoc" type="checkbox" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                Independent Contractor Agreement
                            </label>
                        </div>
                    </div>
                    <div class="col-md-4 d-flex">
                        <div class="inputWrapper not-show">
                            @{
                                bool isChecked = Model!=null ? Model.Isagreementdoc :false;
                            }
                            <input @(isChecked  ? "" : "disabled") class="fileInput btn btn-info"  asp-for="Agreementdoc" type="file" name="Agreementdoc" />
                            <span class="btn btn-info text-white upload-button">Upload</span>
                        </div>
                        @{
                            if ( Model!=null && Model.Isagreementdoc)
                            {
                                 <a href="~/Upload/Physician/@Model.Physicianid/Agreementdoc.pdf" target="_blank" class="btn btn-info mx-2 text-white ">View</a>
                                
                            }
                        }
                        <a class="btn btn-info mx-2 text-white view-button" style="display:none;">View</a>

                        <!-- Display uploaded file details -->
                        <div class="file-details" style="display:none;">
                            <p><span class="file-name"></span></p>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-12 ">
                <div class="row" > 
                    <div class="col-md-3">
                        <div class="form-check mx-2">
                            <input class="form-check-input agreement-checkbox not-show" asp-for="Isbackgrounddoc" type="checkbox" id="Isbackgrounddoc">
                            <label class="form-check-label" for="Isbackgrounddoc">
                                Background Check
                            </label>
                        </div>
                    </div>
                    <div class="col-md-4 d-flex">
                        <div class="inputWrapper not-show">
                            @{
                                 isChecked = Model != null ? Model.Isbackgrounddoc : false;
                            }
                            <input @(isChecked  ? "" : "disabled") class="fileInput btn btn-info" asp-for="BackGrounddoc" type="file" name="BackGrounddoc" />
                            <span class="btn btn-info text-white upload-button">Upload</span>
                        </div>
                        @{
                            if (Model != null && Model.Isbackgrounddoc)
                            {
                                <a href="~/Upload/Physician/@Model.Physicianid/BackGrounddoc.pdf" target="_blank" class="btn btn-info mx-2 text-white ">View</a>

                            }
                        }
                        <!-- Display uploaded file details -->
                        <div class="file-details" style="display:none;">
                            <p><span class="file-name"></span></p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="row" > 
                    <div class="col-md-3">
                        <div class="form-check mx-2">
                            <input class="form-check-input agreement-checkbox not-show" asp-for="Istrainingdoc" type="checkbox" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                HIPAA Compliance
                            </label>
                        </div>
                    </div>
                    <div class="col-md-4 d-flex">
                        <div class="inputWrapper not-show">
                            @{
                                isChecked = Model != null ? Model.Istrainingdoc : false;
                            }
                            <input @(isChecked  ? "" : "disabled") class="fileInput btn btn-info" asp-for="Trainingdoc" type="file" name="Trainingdoc" />
                            <span class="btn btn-info text-white upload-button">Upload </span>
                        </div>
                        @{
                            if (Model != null && Model.Istrainingdoc)
                            {
                                <a href="~/Upload/Physician/@Model.Physicianid/Trainingdoc.pdf" target="_blank" class="btn btn-info mx-2 text-white ">View</a>

                            }
                        }

                        <!-- Display uploaded file details -->
                        <div class="file-details" style="display:none;">
                            <p><span class="file-name"></span></p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-check mx-2">
                            <input class="form-check-input agreement-checkbox not-show" asp-for="Isnondisclosuredoc" type="checkbox" id="Isnondisclosuredoc">
                            <label class="form-check-label" for="Isnondisclosuredoc">
                                Non-disclosure Agreement
                            </label>
                        </div>
                    </div>
                    <div class="col-md-4 d-flex">
                        <div class="inputWrapper not-show">
                            @{
                                isChecked = Model != null ? Model.Isnondisclosuredoc : false;
                            }
                            <input @(isChecked ? "" : "disabled") class="fileInput btn btn-info" asp-for="NonDisclosuredoc" type="file" name="NonDisclosuredoc" />
                            <span class="btn btn-info text-white upload-button">Upload</span>
                        </div>
                        @{
                            if (Model != null && Model.Isnondisclosuredoc)
                            {
                                <a href="~/Upload/Physician/@Model.Physicianid/NonDisclosuredoc.pdf" target="_blank" class="btn btn-info mx-2 text-white ">View</a>

                            }
                        }
                        <!-- Display uploaded file details -->
                        <div class="file-details" style="display:none;">
                            <p><span class="file-name"></span></p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-check mx-2">
                            <input class="form-check-input agreement-checkbox not-show" asp-for="Islicensedoc" type="checkbox" id="Islicensedoc">
                            <label class="form-check-label" for="Islicensedoc">
                                License Document
                            </label>
                        </div>
                    </div>
                    <div class="col-md-4 d-flex">
                        <div class="inputWrapper not-show">
                            @{
                                isChecked = Model != null ? Model.Islicensedoc : false;
                            }
                            <input @(isChecked ? "" : "disabled") class="fileInput btn btn-info" asp-for="Licensedoc" type="file" name="Licensedoc" />
                            <span class="btn btn-info text-white upload-button">Upload</span>
                        </div>
                        @{
                            if (Model != null && Model.Islicensedoc)
                            {
                                <a href="~/Upload/Physician/@Model.Physicianid/Agreementdoc.pdf" target="_blank" class="btn btn-info mx-2 text-white ">View</a>

                            }
                        }
                        <!-- Display uploaded file details -->
                        <div class="file-details" style="display:none;">
                            <p><span class="file-name"></span></p>
                        </div>
                    </div>
                </div>
            </div>


       <hr/> 
            <div class="text-end mt-2 edits" >

               
                @if (Model != null &&  Model.Physicianid != Convert.ToInt32(CV.UserID()))
                {
                    <button type="submit" asp-action="EditProviderOnbording" asp-controller="Physician" id="save1" class="btn text-white btn-info btn-submit mx-2 ">
                        save
                    </button>
                    <a asp-action="DeletePhysician" asp-controller="Physician" asp-route-PhysicianID="@(Model!= null?Model.Physicianid:null)" class="btn  btn-danger ">
                        Delete Account
                    </a>
                }
                
            </div>
            <div class="text-end" >
            <input type="submit" class="btn btn-success" id="add" value="Create Account" />

            </div>
        </form>
    </div>
</div>
<div class="modal fade" id="reqToAdminmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <h1 class="modal-title text-light  fs-5" id="exampleModalLabel">Request To Administration</h1>
                <button type="button" class="btn-close btn-light" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="need-validation was-validated" novalidate method="post" asp-controller="ViewAction" asp-action="EditPhysicianMyProfilerequest">

                    <input  type="hidden" asp-for="Physicianid" />
                    <input  type="hidden" asp-for="Firstname" />
                    <input  type="hidden" asp-for="Email" />
                    <input name="Email" hidden />
                    <div class="mb-3">
                        Need to send message to edit.
                    </div>

                    <div class="mb-3">
                        <label for="message-text" class="col-form-label">Description</label>
                        <textarea required="" name="notes" class="form-control" id="message-textT" style="height: 100px"></textarea>
                        <div class="invalid-feedback">please fill this.</div>
                    </div>

                    <div class="modal-footer">
                        <input type="submit" class="btn btn-info text-light" value="Submit">
                        <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>


        </div>
    </div>
</div>
@section Scripts
    {

    <script type="text/javascript">
        var loginId = @CV.UserID();
        var providerId = @(Model != null ? Model.Physicianid : -1);
        if(loginId == providerId){
            $('.not-show').hide();
        }
        $(function () {
            $('#edit-mail-billing').on('click', function (e) {
                $('.mail-billing-imp').prop('disabled', false);
                $('#save-mail-billing').show();
                $('#cancel-mail-billing').show();
                $('#edit-mail-billing').hide();
            });
            $('#cancel-mail-billing').on('click', function (e) {
                $('.mail-billing-imp').prop('disabled', true);
                $('#save-mail-billing').hide();
                $('#cancel-mail-billing').hide();
                $('#edit-mail-billing').show();
            });
                            $('#edit-provider-prof').on('click', function (e) {
                    $('.provider-prof').prop('disabled', false);
                    $('#save-provider-prof').show();
                    $('#cancel-provider-prof').show();
                    $('#edit-provider-prof').hide();
                    $('#create-signature-button').prop('disabled', false);
                });
            $('#cancel-provider-prof').on('click', function (e) {
                    $('.provider-prof').prop('disabled', true);
                    $('#save-provider-prof').hide();
                    $('#cancel-provider-prof').hide();
                    $('#edit-provider-prof').show();
                    $('#create-signature-button').prop('disabled', true);
                });

            $('#admin-input-edit').on('click', function (e) {
                $('.admin-input').prop('disabled', false);
                $('#save-admindata').show();
                $('#cancel-admindata').show();
                $('#admin-input-edit').hide();
            });
            $('#cancel-admindata').on('click', function (e) {
                $('.admin-input').prop('disabled', true);
                $('#save-admindata').hide();
                $('#cancel-admindata').hide();
                $('#admin-input-edit').show();
            });
            var modelIsNull = @((Model != null).ToString().ToLower());

            if (modelIsNull) {
                $('.admin-input').prop('disabled', true);
                $('.provider-prof').prop('disabled', true);
                $('#save-provider-prof').hide();
                $('#cancel-provider-prof').hide();
                $('.mail-billing-imp').prop('disabled', true);
                $('#save-mail-billing').hide();
                $('#cancel-mail-billing').hide();
                $('.editable').show();
                $('#save-admindata').hide();
                $('#cancel-admindata').hide();
                $('.inp-dis').prop('disabled', true);

                $('#saveasp').hide();
                $('#cancelasp').hide();
                $('#add').hide();
                $('.editable').show();
                 $('.form-control-disable').prop('disabled', true);
            }else{
                $('.edits').hide();

            }

            $('#editasp').on('click', function (e) {
                $('.asp').prop('disabled', false);
                $('#saveasp').show();
                $('#cancelasp').show();
                $('#editasp').hide();
            });
            $('#cancelasp').on('click', function (e) {
                $('.asp').prop('disabled', true);
                $('#saveasp').hide();
                $('#cancelasp').hide();
                $('#editasp').show();
            });

            let checkboxes = document.querySelectorAll('.regionbox:checked');
            let regionIds = [];
            checkboxes.forEach((checkbox) => {
                regionIds.push(checkbox.value);
            });
            document.querySelector('#regionids').value = regionIds.join(',');
            console.log(document.querySelector('#regionids').value);

            $('.regionbox').on('change', function () {
                event.preventDefault();
                let checkboxes = document.querySelectorAll('.regionbox:checked');
                let regionIds = [];
                checkboxes.forEach((checkbox) => {
                    regionIds.push(checkbox.value);
                });
                document.querySelector('#regionids').value = regionIds.join(',');
                console.log(document.querySelector('#regionids').value);
            });

            $('.agreement-checkbox').on('change', function () {
                var isChecked = $(this).prop('checked');
                var $fileInput = $(this).closest('.row').find('.fileInput');

                console.log($fileInput);

                $fileInput.prop('disabled', !isChecked);
            });


            $('.fileInput').on('change', function () {
                var file = $(this)[0].files[0];
                var $fileDetails = $(this).closest('.inputWrapper').siblings('.file-details');
                var $viewButton = $(this).closest('.inputWrapper').siblings('.view-button');
                console.log($viewButton);

                if (file) {
                    $viewButton.show();
                    $fileDetails.show();
                    $fileDetails.find('.file-name').text(file.name);
                }
            });

            $('.view-button').on('click', function (e) {
                var $fileInput = $(this).siblings('.inputWrapper').find('.fileInput')[0];
                var file = $fileInput.files[0];
                if (file) {
                    var fileType = file.type;
                    if (fileType === 'application/pdf') {
                        // Handle PDF file view
                        var link = document.createElement('a');
                        link.href = e.target.result;
                        link.download = file.name;
                        document.body.appendChild(link)
                            ;
                        link.click();
                        document.body.removeChild(link)
                    } else {
                        // Handle other file types (e.g., prompt download)
                        alert('Download file: ' + file.name);
                    }
                }
            });



            var canvas = $('#signature-pad')[0];
            var ctx = canvas.getContext('2d');
            var drawing = false;
            var strokes = [];
            var saveButton = $('#save-button');
            var signatureFileInput = $('#signature-file');

            function scaleUp(c, scale) {

                var newCanvas = $("<canvas>")
                    .attr("width", c.width * scale)
                    .attr("height", c.height * scale)[0];

                var ctx2 = newCanvas.getContext("2d");
                ctx2.imageSmoothingEnabled = false;
                ctx2.drawImage(c, 0, 0, newCanvas.width, newCanvas.height);

                var dataURL = newCanvas.toDataURL("image/png");
                document.getElementById("saved").src = dataURL;

            }

            $('#create-signature-button').on('click', function () {
                $('#create-signature-button').hide();
                $('#clear-button').show();
                $('#undo-button').show();
                $('#save-button').show();
                
                canvas.style.display = 'block';
            });

            $('#signature-pad').on('mousedown', function (e) {
                drawing = true;
                ctx.beginPath();
                ctx.moveTo(e.clientX - canvas.getBoundingClientRect().left, e.clientY - canvas.getBoundingClientRect().top);
            });

            $('#signature-pad').on('mousemove', function (e) {
                if (drawing) {
                    ctx.lineTo(e.clientX - canvas.getBoundingClientRect().left, e.clientY - canvas.getBoundingClientRect().top);
                    ctx.stroke();
                }
            });

            $('#signature-pad').on('mouseup', function () {
                if (drawing) {
                    drawing = false;
                    strokes.push(ctx.getImageData(0, 0, canvas.width, canvas.height));
                    updateSaveButtonState();
                }
            });

            $('#clear-button').on('click', function () {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                strokes = [];
                updateSaveButtonState();
            });

            $('#save-button').on('click', function () {
                $('#saved').show();
                scaleUp(canvas, 1);
                var dataURL = canvas.toDataURL("image/png");
                $('#signature-data').val(dataURL); // Set the value of the hidden input field
               // $('#save-form').submit(); // Submit the form
            });

            function updateSignatureFileInput() {
                if (strokes.length > 0) {
                    var dataURL = canvas.toDataURL("image/png");
                    var blob = dataURLToBlob(dataURL);
                    var file = new File([blob], "signature.png", { type: "image/png" });
                    signatureFileInput.prop('files', [file]);
                    saveButton.prop('disabled', false);
                } else {
                    saveButton.prop('disabled', true);
                }
            }

            function dataURLToBlob(dataURL) {
                var byteString = atob(dataURL.split(',')[1]);
                var ab = new ArrayBuffer(byteString.length);
                var ia = new Uint8Array(ab);
                for (var i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }
                return new Blob([ab], { type: 'image/png' });
            }

            function updateSaveButtonState() {
                if (strokes.length > 0) {
                    var dataURL = canvas.toDataURL("image/png");
                    var blob = dataURLToBlob(dataURL);
                    var file = new File([blob], "signature.png", { type: "image/png" });
                    var dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    signatureFileInput.prop('files', dataTransfer.files);
                    saveButton.prop('disabled', false);
                } else {
                    saveButton.prop('disabled', true);
                }
            }
        });

        window.onload = function () {
            console.log("@status  d");
            if ("@status" != "null") {
                savealt("@status")
            }

        };

        const btn = document.querySelector('#submit');
        const resetbtn = document.querySelector('#submitresetpass');
        const billingbtn = document.querySelector('#submitbilling');

        billingbtn.addEventListener('click', (event) => {
            event.preventDefault();

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#billing').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

        resetbtn.addEventListener('click', (event) => {
            event.preventDefault();

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#resetpass').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

        btn.addEventListener('click', (event) => {
            event.preventDefault();
            let checkboxes = document.querySelectorAll('input[name="Region"]:checked');
            let regionIds = [];
            checkboxes.forEach((checkbox) => {
                regionIds.push(checkbox.value);
            });
            document.querySelector('#regionids').value = regionIds.join(',');
            console.log(document.querySelector('#regionids').value);
            Swal.fire({
                title: "Do you want Save Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#profile').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

    </script>
}
