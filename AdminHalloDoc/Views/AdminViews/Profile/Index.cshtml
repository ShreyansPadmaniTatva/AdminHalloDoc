@using static AdminHalloDoc.Entities.ViewModel.Constant;
@model AdminHalloDoc.Entities.ViewModel.AdminViewModel.ViewAdminProfile
@{
    var enumData = from AdminStatus e in Enum.GetValues(typeof(AdminStatus))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };

    var status = "null";
    if (TempData["Status"] == null)
    {
        status = "null";
    }
    else
    {
        status = TempData["Status"].ToString();

    }
}
<div class="container">
    <div class="justify-content-between d-flex container-fluid mb-5 position-relative ">
        <div class="">
            <h1>
                My Profile
            </h1>
        </div>
        <div>
            <a href="Patient_submit_request.html" class="btn btn-outline-info"> ❮  Back </a>
        </div>
    </div>
    <div class="card border-0 shadow p-4 mb-5  rounded">

        <form asp-action="ResetPassAdmin" asp-controller="AdminProfile" id="resetpass" class="row g-3 ">
            <input type="hidden" asp-for="AdminId" />
            <h4 class=" my-4">Account Information</h4>
            <div class="col-md-6 form-floating  ">
                <input asp-for="UserName" disabled class="form-control rounded" name="UserName" type="text" placeholder="First Name" autocomplete=off>
                <label class="" for="floatingInput">User Name </label>
            </div>
            <div class="col-md-6 form-floating">
                <input class="form-control rounded" name="Password" id="passwordInput" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Password </label>
                <div class="invalid-feedback invalid-feedback-pass">
                    Please  Add PassWord
                </div>
            </div>

            <div class="col-md-6 form-floating">
                <select  class="form-select form-select-md p-2" disabled required name="Status" asp-for="Status" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="region2" asp-items="@(new SelectList(enumData, "ID", "Name"))" data-control="select2" data-placeholder="Select Level">
                </select>
            </div>
            <div class="col-md-6 form-floating">
                <select class="form-select form-select-md p-2" disabled required name="Roleid" asp-for="Roleid" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="roles" asp-items="@(new SelectList(ViewBag.userrolecombobox,"RoleId","RoleName"))" data-control="select2" data-placeholder="Select Level">
                </select>
            </div>
            <div class="text-end edits">
                <div class="text-end btn btn-outline-info " id="submitresetpass">Reset Password</div>
            </div>
        </form>

        <h4 class=" my-4"> Administrator Information</h4>

        <form asp-action="SaveAdministrationinfo" asp-controller="AdminProfile" id="profile" class="row g-3 " >
            <input type="hidden" asp-for="AdminId" />
            <div class="col-md-6 form-floating  ">
                <input asp-for="Firstname" class="form-control rounded admin-input" name="Firstname" type="text" placeholder="First Name" autocomplete=off>
                <label class="" for="floatingInput">First Name </label>
                <div class="invalid-feedback invalid-feedback-firstname">
                    Please  Add First Name
                </div>
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Lastname" class="form-control rounded admin-input" name="Lastname" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Last name </label>
                <div class="invalid-feedback invalid-feedback-lastname">
                    Please  Add Last Name
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Email" class="form-control  rounded admin-input" id="email" name="Email" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Email </label>
                <div class="invalid-feedback invalid-feedback-email">
                    Please  Add Email
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Email" class="form-control  rounded admin-input" id="confirmEmail" name="Email" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Confirm Email </label>
                <div class="invalid-feedback invalid-feedback-confirm-email">
                    Email And Confirm Email Are not same
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Mobile" id="phone" type="tel" name="Mobile" class="form-control rounded admin-input" autocomplete=off>
                <div class="invalid-feedback invalid-feedback-mobile">
                    Please  Add Mobile Number
                </div>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>
            <input asp-for="Regionsid" type="hidden" id="regionids" />
            <div class="col-md-6 d-flex">

                @foreach (var cb in ViewBag.RegionComboBox)
                {
                    @if (Model != null && Model.Regionids.Count > 0 && Model.Regionids.Exists(id => id.regionid == cb.RegionId))
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault" checked>
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }


                }
            </div>
            <div class="text-end edits">
                <a onclick="enable_disable_administration()" id="edit" class="btn text-white btn-info btn-submit ">
                    Edit
                </a>
                <div id="submit" class="btn  btn-outline-info  mx-2 ">
                    save
                </div>
                <div id="cancel" class="btn  btn-outline-danger ">
                    cancel
                </div>
            </div>
        </form>

        <h4 class=" my-4">Mailing & Billing  Information</h4>

        <form asp-action="EditBillingInfo" asp-controller="AdminProfile" id="billing" method="post" class="row g-3 ">
            <input type="hidden" asp-for="AdminId" />
            <div class="col-md-6 form-floating ">
                <input asp-for="Address1" class="form-control rounded mail-billing-imp" name="Address1" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address1 </label>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="Address2" class="form-control rounded mail-billing-imp" name="Address2" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address2 </label>
            </div>
            <div class="col-md-6 form-floating "> 
                <input asp-for="City" class="form-control rounded mail-billing-imp" name="City" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">City</label>
            </div>
            <div class="col-md-6 form-floating ">
                <select class="form-select form-select-md mt-3 p-2 mail-billing-imp" asp-for="Regionid" name="Regionid" data-allow-clear="true" tabindex="-1" asp-items="@(new SelectList(ViewBag.RegionComboBox,"RegionId","RegionName"))" data-control="select2" data-placeholder="Select Level">
                </select>
                <label for="floatingInput">State</label>
                <div class="invalid-feedback invalid-feedback-Regionid">
                    Please  Add Mobile Number
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Zipcode" class="form-control rounded mail-billing-imp" name="Zipcode" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Zip Code</label>
                <div class="invalid-feedback invalid-feedback-zipcode">
                    Please Add 6 Digit Valid  Zip Code
                </div>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="AltMobile" id="phone1" type="tel" name="AltMobile" class="form-control rounded mail-billing-imp" autocomplete=off>
                <div class="invalid-feedback invalid-feedback-phone1">
                    Please  Add Mobile Number
                </div>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>

            <div class="text-end my-4 edits">
                <a onclick="enable_disable_mailBilling()" id="edit1" class="btn btn-info text-white p-2">
                    Edit
                </a>
                <div id="submitbilling" class="btn btn-info text-white p-2">
                    save
                </div>
                <div id="cancel1" @*asp-action="Index" asp-controller="MyProfile"*@ class="btn  btn-outline-danger ">
                    cancel
                </div>
               
            </div>
            <button type="submit" asp-action="" asp-controller="" class="btn btn-info add" style="display:none" />
        </form>

    </div>
</div>
@section Scripts
    {

    <script type="text/javascript">
        function enable_disable_mailBilling() {
            $(".mail-billing-imp").prop("disabled", false);

            $("#submitbilling").prop("disabled", false);
            $("#cancel1").prop("disabled", false);
            $("#submitbilling").css("display", "");
            $("#cancel1").css("display", "");
            $("#edit1").css("display", "none");
        }
        function enable_disable_administration() {
            $(".admin-input").prop("disabled", false);
            $(".form-check-input").prop("disabled", false);
            $("#submit").prop("disabled", false);
            $("#cancel").prop("disabled", false);
            $("#submit").css("display", "");
            $("#cancel").css("display", "");
            $("#edit").css("display", "none");
        }
        $(document).ready(function () {
            var modelIsNull = @((Model != null).ToString().ToLower());

            if (modelIsNull) {
                console.log(modelIsNull);
                $('.admin-input').prop('disabled', true);
                $(".form-check-input").prop("disabled", true);
                $("#submit").css("display", "none");
                $("#cancel").css("display", "none");
                $(".mail-billing-imp").prop("disabled", true);


                $("#submitbilling").css("display", "none");
                $("#cancel1").css("display", "none");
            } else {
                console.log(modelIsNull);

               // enable_disable_mailBilling();
               // enable_disable_administration();
                $('.edits').hide();
                $('.edits').hide();

            }
            //$(".admin-input").prop("disabled", true);

            
            $('#cancel').click(function () {
                $("#submit").css("display", "none");
                $("#cancel").css("display", "none");
                $(".admin-input").prop("disabled", true);
                $("#edit").css("display", "");
            });
        });

        $(document).ready(function () {
           
            $('#cancel1').click(function () {
                $("#submitbilling").css("display", "none");
                $("#cancel1").css("display", "none");
                $(".mail-billing-imp").prop("disabled", true);

                $("#edit1").css("display", "");
            });
        });


        window.onload = function () {
            console.log("@status  d");
            if ("@status" != "null") {
                savealt("@status")
            }

        };

        const btn = document.querySelector('#submit');
        const resetbtn = document.querySelector('#submitresetpass');
        const billingbtn = document.querySelector('#submitbilling');

        function billingbtns(){
            event.preventDefault();

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#billing').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        }

        function resetpass(){
            event.preventDefault();

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#resetpass').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        }

        function saveinfo() {
            event.preventDefault();
            let checkboxes = document.querySelectorAll('input[name="Region"]:checked');
            let regionIds = [];
            checkboxes.forEach((checkbox) => {
                regionIds.push(checkbox.value);
            });
            document.querySelector('#regionids').value = regionIds.join(',');
            console.log(document.querySelector('#regionids').value);
            Swal.fire({
                title: "Do you want Save Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#profile').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        }
        document.getElementById('submitresetpass').addEventListener('click', function () {
            // Get the value of the password input field
            var password = document.getElementById('passwordInput').value;
            // Check if password is empty
            if (!password) {
                // Display alert if password is empty
                $('.invalid-feedback-pass').show();
            }else{
                resetpass();
            }
        });

        function validateForm() {
            // Get the values of the input fields
            var firstName = document.getElementById("Firstname").value.trim();
            var lastName = document.getElementById("Lastname").value.trim();
            var email = document.getElementById("email").value.trim();
            var mobile = document.getElementById("phone").value.trim();
            var confirmEmail = document.getElementById("confirmEmail").value.trim();
            var isValid = true;
           
            if (firstName === "") {
                document.querySelector('.invalid-feedback-firstname').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-firstname').style.display = 'none';
            }

            if (lastName === "") {
                document.querySelector('.invalid-feedback-lastname').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-lastname').style.display = 'none';
            }

            if (email === "") {
                document.querySelector('.invalid-feedback-email').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-email').style.display = 'none';
            }

            if (mobile === "") {
                document.querySelector('.invalid-feedback-mobile').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-mobile').style.display = 'none';
            }

            if (email !== confirmEmail) {
                document.querySelector('.invalid-feedback-confirm-email').style.display = 'block';
                isValid = false;
            }
            return isValid;
        }

        document.getElementById("submit").addEventListener("click", function () {
            // Validate the form fields
            var isValid = validateForm();

            // If form is valid, proceed with form submission
            if (isValid) {
                saveinfo();
            }
        });

        function validateFormbiil() {
            // Get the values of the input fields
            var firstName = document.getElementById("Regionid").value.trim();
            var lastName = document.getElementById("phone1").value.trim();
            var zipcodeValue = document.getElementById("Zipcode").value.trim();

            var isValid = true;
           
            if (firstName === "") {
                document.querySelector('.invalid-feedback-Regionid').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-Regionid').style.display = 'none';
            }

            if (!/^\d{6}$/.test(zipcodeValue)) {
                isValid = false;
                document.querySelector('.invalid-feedback-zipcode').style.display = 'block';
            } else {
                document.querySelector('.invalid-feedback-zipcode').style.display = 'none';

            }

            if (lastName === "") {
                document.querySelector('.invalid-feedback-phone1').style.display = 'block';
                isValid = false;
            } else {
                document.querySelector('.invalid-feedback-phone1').style.display = 'none';
            }

           
            return isValid;
        }

        document.getElementById("submitbilling").addEventListener("click", function () {
            // Validate the form fields
            var isValid = validateFormbiil();

            // If form is valid, proceed with form submission
            if (isValid) {
                billingbtns();
            }
        });
    </script>
}
