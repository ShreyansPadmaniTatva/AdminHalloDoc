@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Requested Shift";

    var status = "null";
    if (TempData["Status"] == null)
    {
        status = "null";
    }
    else
    {
        status = TempData["Status"].ToString();

    }
}
@model List<AdminHalloDoc.Entities.ViewModel.AdminViewModel.Schedule>
<div class="container">
    <div class="justify-content-between d-flex container-fluid position-relative ">
        <div class="">
            <h3 class="fw-bolder">
               Requested Shifts
            </h3>
        </div>
        <div class="">
            <a href="javascript:void(0)" onclick="goBack()" class="btn btn-outline-info"> ❮  Back </a>
        </div>
    </div>
    <div class="card border-0 shadow py-4 mb-5 mx-3 mt-3 rounded">
        <div class="d-flex justify-content-between">
            <div class="text-start mx-2 px-3">
                <div class="dropdown ">
                    <select class="form-select form-select-md " data-allow-clear="true" tabindex="-1" id="Region" onchange="ChangeRegion()" asp-items="@(new SelectList(ViewBag.RegionComboBox,"RegionId","RegionName"))" data-control="select2" data-placeholder="Select Level">
                    <option value="-1" >All Region</option>
                    </select>
                </div>
            </div>
            <div class="text-end mx-2 px-3 d-flex">
                <!-- Button trigger modal -->
                <a asp-action="Index" asp-controller="Scheduling" type="button" id="adminAccount" class="btn btn-success shadow mx-2">
                   View Current Month Shift
                </a>
                <form asp-action="_ApprovedShifts" id="approvedform" asp-controller="Scheduling" class="mx-2">
                    <input type="hidden" id="approved" name="shiftids" />
                    <div class="btn btn-success shadow" id="approvedbtn">
                          Approved Selected Shift
                    </div>
                </form>
                <form asp-action="_DeleteShifts" id="deletedform" asp-controller="Scheduling" class="mx-2">
                    <input type="hidden" id="deleted"  name="shiftids" />
                    <div class="btn btn-danger shadow" id="deletedbtn">
                    Delete Selected
                    </div>
                </form>
            </div>
        </div>

        <div id="shiftrequest" class="table-responsive mt-3">
            <table id="shiftrequesttable" class="table table-responsive mt-3 p-3">
                <thead>
                    <tr>
                        <th scope="col">
                            <div class="form-check text-center">
                                <input class="form-check-input" type="checkbox" id="topflexCheckDefault">
                            </div>
                        </th>
                        <th scope="col">Sttaf</th>
                        <th scope="col">Day </th>
                        <th scope="col">Time</th>
                        <th scope="col">Region</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5">
                    @foreach (var item in Model)
                    {
                        <tr class="">
                            <td class="" >
                                <div class="form-check text-center">
                                    <input class="form-check-input" type="checkbox" value="@item.Shiftid" id="flexCheckDefault">
                                </div>
                            </td>
                            <td scope="row" > @item.PhysicianName</td>
                            <td scope="row" > @item.Shiftdate</td>
                            <td scope="row" >  @item.Starttime @item.Endtime</td>
                            <td scope="row" > @item.RegionName</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

    </div>
</div>

@section Scripts
    {

    <script type="text/javascript">

        $(document).ready(function () {
            var button = document.querySelector('.dt-paging-button.current');

            // Check if the button element exists
            if (button) {
                console.log(6565560561);
                // Apply the style to change the text color to white
                button.style.setProperty('color', 'white', 'important');
                button.classList.add('rounded');
            }
            // Event listener for checkbox changes
            $(document).on('change', '.table tbody input[type="checkbox"]', function () {
                var checkedValues = [];
                // Update the checkboxes and retrieve their values
               // $('.table tbody input[type="checkbox"]').prop('checked', $(this).is(':checked'));
                $('.table tbody input[type="checkbox"]:checked').each(function () {
                    checkedValues.push($(this).val());
                });
                // Update the hidden inputs with checkbox values
                $('#approved').val(checkedValues.join(','));
                $('#deleted').val(checkedValues.join(','));
                // Update the top checkbox state based on all checkboxes
                var allChecked = $('.table tbody input[type="checkbox"]').length === $('.table tbody input[type="checkbox"]:checked').length;
                $('#topflexCheckDefault').prop('checked', allChecked);
            });

            // Event listener for top checkbox change
            $(document).on('change', '#topflexCheckDefault', function () {
                var checked = $(this).is(':checked');
                $('.table tbody input[type="checkbox"]').prop('checked', checked).change();
            });
        });


        new DataTable('#shiftrequesttable', {
            pagingType: 'simple_numbers',
            lengthChange: false, // Disable table length dropdown
            searching: false // Disable search feature
        });



        $('#deletedbtn').click(function () {
            var approvedValue = $('#deleted').val();
            console.log(approvedValue)
            // Check if the value is null or empty
            if (approvedValue === null || approvedValue.trim() === '') {
                Swal.fire({
                    icon: "error",
                    title: "Not Select Any Shift ...",
                    text: "Plz Select first At Leat One Shift!"
                });
                return; // Exit the function
            }

            Swal.fire({
                title: "Do you want to Delete Shifts ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Save",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#deletedform').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Delete!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });


        $('#approvedbtn').click(function () {
            var approvedValue = $('#approved').val();
            console.log(approvedValue)
            // Check if the value is null or empty
            if (approvedValue === null || approvedValue.trim() === '') {
                Swal.fire({
                    icon: "error",
                    title: "Not Select Any Shift ...",
                    text: "Plz Select first At Leat One Shift!"
                });
                return; // Exit the function
            }

                Swal.fire({
                title: "Do you want to Approved Shifts ?",
                    showDenyButton: false,
                    showCancelButton: true,
                    confirmButtonText: "Save",
                    denyButtonText: `Don't save`
                }).then((result) => {
                    if (result.isConfirmed) {
                    $('#approvedform').submit();
                    }
                    console.log(result);
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                    Swal.fire("Approved!", "", "success");
                    } else if (result.isDenied) {
                        Swal.fire("Changes are not saved", "", "info");
                    }
                });
            });


        function ChangeRegion() {
            var Region = $("#Region").val();
            if (Region == '-1') {
                Region = null;
                location.reload();
            }
            console.log(Region);
            $.ajax({
                type: "POST",
                url: '@Url.Action("RequestedShift","Scheduling")?regionId=' + Region,
                cache: false,
                success: function (response) {

                    var tableContent = ''; // Variable to hold the table content

                    // Iterate through each object in the response array
                    response.forEach(function (item) {
                        // Create a new table row
                        var row = $('<tr class="">');
                        // Append data to the row
                        row.append(`<td class="mobile-hide" data-label="Current Status">
                                <div class="form-check text-center">
                                            <input class="form-check-input" type="checkbox" value="${item.shiftid}" id="flexCheckDefault">
                                </div>
                            </td>`);
                        row.append('<td scope="row" data-label="Created Date">' + item.physicianName + '</td>');
                        row.append('<td scope="row" data-label="Created Date">' + item.shiftdate + '</td>');
                        row.append('<td scope="row" data-label="Created Date">' + item.starttime + ' - ' + item.endtime + '</td>');
                        row.append('<td scope="row" data-label="Created Date">' + item.regionName + '</td>');
                        // Append the row to the table content
                        tableContent += row.prop('outerHTML');
                    });

                    // Construct the entire table with thead and tbody
                    var fullTable = `
                        <div id="shiftrequest" class="table-responsive mt-3">
                            <table id="shiftrequesttable" class="table table-responsive mt-3 p-3">
                        <thead>
                            <tr>
                                <th scope="col">
                                    <div class="form-check text-center">
                                        <input class="form-check-input" type="checkbox" id="topflexCheckDefault">
                                    </div>
                                </th>
                                <th scope="col">Staff</th>
                                <th scope="col">Day</th>
                                <th scope="col">Time</th>
                                <th scope="col">Region</th>
                            </tr>
                        </thead>
                        <tbody class="table-group-divider mx-5">
                            ${tableContent}
                        </tbody>
                    </table>
                </div>
            `;

                    // Replace the existing content with the new table content
                    $('#shiftrequest').replaceWith(fullTable);
                    new DataTable('#shiftrequesttable', {
                        pagingType: 'simple_numbers',
                        lengthChange: false, // Disable table length dropdown
                        searching: false // Disable search feature
                    });
                },
                error: function () {
                    alert("Error while checking email.");
                }
            });
        }

        window.onload = function () {

            console.log("@status  d");
            if ("@status" != "null") {
                savealt("@status")
            }

        };
    </script>
}
