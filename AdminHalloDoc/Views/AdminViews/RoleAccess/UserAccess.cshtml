@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var enumData = from AccountType e in Enum.GetValues(typeof(AccountType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var status = "null";
    if (TempData["Status"] == null)
    {
        status = "null";
    }
    else
    {
        status = TempData["Status"].ToString();

    }

}
@using static AdminHalloDoc.Entities.ViewModel.Constant;
@model List<AdminHalloDoc.Entities.ViewModel.AdminViewModel.ViewUserAcces>;
<div class="container">
    <div class="justify-content-between d-flex container-fluid position-relative ">
        <div class="">
            <h3 class="fw-bolder">
                User Access
            </h3>
        </div>
    </div>
    <div class="card border-0 shadow py-4 mb-5 mx-3 mt-3 rounded">
        <div class="d-flex justify-content-between" >
            <div class="text-start mx-2 px-3">
                <div class="dropdown ">
                    <select class="form-select form-select-md " data-allow-clear="true" tabindex="-1" id="accounttype" onchange="ChangeRole()" data-control="select2" data-placeholder="Select Level">
                        <option value="1">All</option>
                        <option value="2">Admin</option>
                        <option value="3">Physician</option>
                    </select>
                </div>
            </div>
            <div class="text-end mx-2 px-3">
                <!-- Button trigger modal -->
                <a asp-action="AdminAddEdit" asp-controller="RoleAccess" type="button" id="adminAccount" class="btn btn-outline-info" style="display:none">
                    Create Admin Account
                </a>
                <a asp-action="PhysicianAddEdit" asp-controller="RoleAccess" type="button" id="providerAccount" class="btn btn-outline-info" style="display:none">
                    Create Provider Account
                </a>
            </div>
        </div>
       
        <div class="table-responsive">
            <table class="table table-responsive mt-3 p-3">
                <thead>
                    <tr>
                        <th scope="col">Account Type</th>
                        <th scope="col">Account POC</th>
                        <th scope="col">Phone</th>
                        <th scope="col">Status</th>
                        <th scope="col">Open Request</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5">
                    @foreach (var item in Model)
                    {
                        <tr class="@Enum.GetName(typeof(AccountType), item.accounttype)">
                            <td class="mobile-hide" data-label="Current Status"> @Enum.GetName(typeof(AccountType), item.accounttype)</td>
                            <td scope="row" data-label="Created Date"> @item.FirstName</td>
                            <td scope="row" data-label="Created Date"> @item.Mobile</td>
                            <td scope="row" data-label="Created Date">  @Enum.GetName(typeof(AdminStatus), item.status)</td>
                            <td scope="row" data-label="Created Date"> @item.OpenRequest</td>
                            <td class="mobile-hide" data-label="Document">
                                @if(item.isAdmin){
                                    <a asp-action="AdminAddEdit" asp-controller="RoleAccess" asp-route-id="@item.UserID" class="btn btn-outline-info btn-sm document-button mx-1">
                                        Edit a
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="PhysicianAddEdit" asp-controller="RoleAccess" asp-route-id="@item.UserID" class="btn btn-outline-info btn-sm document-button mx-1">
                                        Edit p
                                    </a>
                                }
                                
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

    </div>
</div>


@section Scripts
    {

    <script type="text/javascript">
        var AdminStatus = {
        @foreach (int value in Enum.GetValues(typeof(AdminStatus)))
        {
            <text>'@value': '@Enum.GetName(typeof(AdminStatus), value)', </text>
        }
                    };
        var accountTypeValues = {
        @foreach (int value in Enum.GetValues(typeof(AccountType)))
        {
            <text>'@value': '@Enum.GetName(typeof(AccountType), value)', </text>
        }
            };
        function ChangeRole() {
            var email = $("#accounttype").val();
            if (email == '-1') {
                email = null;
                location.reload();
            }
            console.log(email);
            $.ajax({
                type: "POST",
                url: '@Url.Action("UserAccess","RoleAccess")?User=' + email,
                cache: false,
                success: function (response) {

                    console.log(response);
                    $('table tbody').empty();
                    // Assuming response is an array of objects, iterate through each object
                    response.forEach(function (item) {
                       
                        var newRow = $('<tr>');
                        newRow.append('<td class="mobile-hide" data-label="Current Status">' + accountTypeValues[item.accounttype] + '</td>');
                        
                        newRow.append('<td scope="row" data-label="Created Date">' + item.firstName + '</td>');
                        newRow.append('<td scope="row" data-label="Created Date">' + item.mobile + '</td>');
                        newRow.append('<td scope="row" data-label="Created Date">' + AdminStatus[item.status] + '</td>');
                        newRow.append('<td scope="row" data-label="Created Date">' + item.status + '</td>');

                        var actionButtonsCell = $('<td class="d-flex" data-label="Document">');
                        if (item.isAdmin) {
                            actionButtonsCell.append('<a href="/RoleAccess/AdminAddEdit/' + item.userID + '" class="btn btn-outline-info btn-sm document-button mx-1">Edit a</a>');
                        } else {
                            actionButtonsCell.append('<a href="/RoleAccess/PhysicianAddEdit/' + item.userID + '" class="btn btn-outline-info btn-sm document-button mx-1">Edit p</a>');
                        } newRow.append(actionButtonsCell);
                        
                        // Append the new row to the table
                        $('table tbody').append(newRow);
                    });

                },
                error: function () {
                    alert("Error while checking email.");
                }
            });
        }

        $('#accounttype').on('change', function () {
            console.log(56);
            var Accounttype = $("#accounttype").val();
            if (Accounttype == 2) {
                $('#adminAccount').show();
                $('#providerAccount').hide();
            } else if (Accounttype == 3) {
                $('#adminAccount').hide();
                $('#providerAccount').show();
            } else {
                $('#adminAccount').hide();
                $('#providerAccount').hide();
            }
        });

        window.onload = function () {

            console.log("@status  d");
            if ("@status" != "null") {
                savealt("@status")
            }

        };
    </script>
}
