@using static AdminHalloDoc.Entities.ViewModel.Constant;
@model AdminHalloDoc.Entities.ViewModel.AdminViewModel.ViewAdminProfile
@{
    ViewData["Title"] = "Admin Account Add Edit";

    var enumData = from AdminStatus e in Enum.GetValues(typeof(AdminStatus))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };

    var status = "null";
    if (TempData["Status"] == null)
    {
        status = "null";
    }
    else
    {
        status = TempData["Status"].ToString();

    }
}
<div class="container">
    <div class="justify-content-between d-flex container-fluid mb-5 position-relative ">
        <div class="">
            <h1>
                @ViewData["AdminAccount"]
            </h1>
        </div>
        <div>
            <div href="javascript:void(0)" onclick="goBack()" class="btn btn-outline-info"> ❮  Back </div>
        </div>
    </div>
    <div class="card border-0 shadow p-4 mb-5  rounded">

        <form asp-action="AdminAdd" asp-controller="RoleAccess" id="resetpass" class="row g-3 ">
            <input type="hidden" asp-for="AdminId" name="AdminId" />
            <h4 class=" my-4">Account Information</h4>
            <div class="col-md-6 form-floating  ">
                <input  class="form-control bg-disabled rounded " disabled id="UserName"  type="text" placeholder="First Name" autocomplete=off>
                <input   id="UserNameasp"  type="hidden" name="UserName" asp-for="Lastname">
                <label class="" for="floatingInput">User Name </label>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating">
                <input class="form-control rounded" name="Password" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Password </label>

            </div>

            @if (Model != null)
            {
                 <div class="col-md-6 form-floating">
                <select class="form-select form-select-md p-2 asp" required name="Status" asp-for="Status" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="region2" asp-items="@(new SelectList(enumData, "ID", "Name"))" data-control="select2" data-placeholder="Select Level">
                </select>
            </div>
            }
           
            <div class="col-md-6 form-floating">
                <select class="form-select form-select-md p-2 asp" required name="Roleid" asp-for="Roleid" data-allow-clear="true" tabindex="-1" onchange="myFunction()" id="roles" asp-items="@(new SelectList(ViewBag.userrolecombobox,"RoleId","RoleName"))" data-control="select2" data-placeholder="Select Level">
                </select>
            </div>
            <div class="text-end edits">
                <button type="submit" asp-action="SaveAdminInfo" asp-controller="RoleAccess" class="btn-info btn" id="saveasp" style="display:none">Save</button>
                <div class="btn btn-info text-white" id="editasp">edit</div>
                <button type="submit" asp-action="ResetPassAdmin" asp-controller="RoleAccess" class="text-end btn btn-outline-info " id="submitresetpass">Reset Password</button>
            </div>

        <h4 class=" my-4"> Administrator Information</h4>

            <input type="hidden" asp-for="AdminId" />
            <div class="col-md-6 form-floating  ">
                <input asp-for="Firstname" class="form-control rounded admin-input" id="FirstName" name="Firstname" type="text" placeholder="First Name" autocomplete=off>
                <label class="" for="floatingInput">First Name </label>
                <span asp-validation-for="Firstname" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating">
                <input asp-for="Lastname" class="form-control rounded admin-input" id="LastName" name="Lastname" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Last name </label>
                <span asp-validation-for="Lastname" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Email" class="form-control  rounded admin-input" id="email" name="Email" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Email </label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Email" class="form-control  rounded admin-input" id="email" name="Email" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Confirm Email </label>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Mobile" id="phone" type="tel" name="Mobile" class="form-control rounded admin-input" autocomplete=off>
                <span asp-validation-for="Mobile" class="text-danger"></span>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>
            <input asp-for="Regionsid" type="hidden" id="regionids" />
            <div class="col-md-6 d-flex">

                @foreach (var cb in ViewBag.RegionComboBox)
                {
                    @if (Model != null && Model.Regionids != null && Model.Regionids.Count > 0 && Model.Regionids.Exists(id => id.regionid == cb.RegionId))
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault" checked>
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="form-check mx-2">
                            <input class="form-check-input" value="@cb.RegionId" type="checkbox" name="Region" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                @cb.RegionName
                            </label>
                        </div>
                    }


                }
            </div>
            <div class="text-end edits">
                <a onclick="enable_disable_administration()" id="edit" class="btn  text-white btn-info btn-submit ">
                    Edit
                </a>
                <button id="submit" type="submit" asp-action="SaveAdministrationinfo" asp-controller="RoleAccess" class="btn  btn-outline-info btn-submit mx-2 ">
                    save
                </button>
                <div id="cancel" class="btn  btn-outline-danger ">
                    cancel
                </div>
            </div>

        <h4 class=" my-4">Mailing & Billing  Information</h4>

            <input type="hidden" asp-for="AdminId" />
            <div class="col-md-6 form-floating ">
                <input asp-for="Address1" class="form-control rounded mail-billing-imp" name="Address1" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address1 </label>
                <span asp-validation-for="Address1" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="Address2" class="form-control rounded mail-billing-imp" name="Address2" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Address2 </label>
                <span asp-validation-for="Address2" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="City" class="form-control rounded mail-billing-imp" name="City" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">City</label>
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="State" class="form-control rounded mail-billing-imp" name="State" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">State</label>
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating  ">
                <input asp-for="Zipcode" class="form-control rounded mail-billing-imp" name="Zipcode" type="text" placeholder=Suchtext autocomplete=off>
                <label for="floatingInput">Zip Code</label>
                <span asp-validation-for="Zipcode" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-floating ">
                <input asp-for="AltMobile" id="phone1" type="tel" name="AltMobile" class="form-control rounded mail-billing-imp" autocomplete=off>
                <span asp-validation-for="AltMobile" class="text-danger"></span>
                <!-- <label for="floatingInput">Phone Number </label> -->
            </div>

            <div class="text-end my-4 edits">
                <a onclick="enable_disable_mailBilling()" id="edit1" class="btn btn-info text-white p-2">
                    Edit
                </a>
                <button id="submitbilling" type="submit" asp-action="EditBillingInfo" asp-controller="RoleAccess" class="btn btn-info text-white p-2">
                    save
                </button>
                <div id="cancel1" @*asp-action="Index" asp-controller="MyProfile"*@ class="btn  btn-outline-danger ">
                    cancel
                </div>

            </div>
            <div class="text-end" >

            <input type="submit" id="AddAdmin" class="btn btn-success add text-white" style="display:none" value="Create Account" />  
            </div>
        </form>

    </div>
</div>
@section Scripts
    {

    <script type="text/javascript">
          function updateUsername() {
        var firstName = $('#FirstName').val().trim();
        var lastName = $('#LastName').val().trim();
        var baseUsername = 'AD.' + (lastName.length > 0 ? lastName.toLowerCase() + '.' : '') + (firstName.length > 0 ? firstName.charAt(0).toLowerCase() : '');

        function checkUsernameAvailability(username, count) {
            $.ajax({
                url: '/RoleAccess/CheckUsernameAvailability',
                type: 'POST',
                data: { username: username },
                success: function (response) {
                    console.log(response);
                    if (response) {
                        $('#UserName').val(username);
                        $('#UserNameasp').val(username);
                    } else {
                        checkUsernameAvailability(baseUsername + count, count + 1);
                    }
                },
                error: function () {
                    console.error('Error checking username availability.');
                }
            });
        }

        checkUsernameAvailability(baseUsername, 1);
    }

    $('#FirstName, #LastName').on('keydown', function () {
          var modelIsNull = @((Model != null).ToString().ToLower());
         
           if (!modelIsNull) {
        updateUsername();
           
           }else{

           }
    });



        let checkboxes = document.querySelectorAll('.regionbox:checked');
        let regionIds = [];
        checkboxes.forEach((checkbox) => {
            regionIds.push(checkbox.value);
        });
        document.querySelector('#regionids').value = regionIds.join(',');
        console.log(document.querySelector('#regionids').value);

        function enable_disable_mailBilling() {
            $(".mail-billing-imp").prop("disabled", false);

            $("#submitbilling").prop("disabled", false);
            $("#cancel1").prop("disabled", false);
            $("#submitbilling").css("display", "");
            $("#cancel1").css("display", "");
            $("#edit1").css("display", "none");
        }
        function enable_disable_administration() {
            $(".admin-input").prop("disabled", false);
            $(".form-check-input").prop("disabled", false);
            $("#submit").prop("disabled", false);
            $("#cancel").prop("disabled", false);
            $("#submit").css("display", "");
            $("#cancel").css("display", "");
            $("#edit").css("display", "none");
        }
        $(document).ready(function () {
            var modelIsNull = @((Model != null && Model.AdminId != null).ToString().ToLower());
           var UserName = " @(Model != null ? "" + Model.UserName.ToString() + "" : "null")";

            if (modelIsNull) {
                console.log(modelIsNull);
                $('.asp').prop('disabled', true);
                $('.admin-input').prop('disabled', true);
                $(".form-check-input").prop("disabled", true);
                $("#submit").css("display", "none");
                $("#cancel").css("display", "none");
                $(".mail-billing-imp").prop("disabled", true);


                $("#submitbilling").css("display", "none");
                $("#cancel1").css("display", "none");
                $('#UserName').val(UserName);
            } else {
                console.log(modelIsNull);

                // enable_disable_mailBilling();
                // enable_disable_administration();
                $('.edits').hide();
                $('.edits').hide();
                $('#AddAdmin').show();
                

            }
            //$(".admin-input").prop("disabled", true);

            $('#editasp').on('click', function (e) {
                $('.asp').prop('disabled', false);
                $('#saveasp').show();
                $('#cancelasp').show();
                $('#editasp').hide();
            });
            $('#cancelasp').on('click', function (e) {
                $('.asp').prop('disabled', true);
                $('#saveasp').hide();
                $('#cancelasp').hide();
                $('#editasp').show();
            });
            $('#cancel').click(function () {
                $("#submit").css("display", "none");
                $("#cancel").css("display", "none");
                $(".admin-input").prop("disabled", true);
                $("#edit").css("display", "");
            });
        });

        $(document).ready(function () {

            $('#cancel1').click(function () {
                $("#submitbilling").css("display", "none");
                $("#cancel1").css("display", "none");
                $(".mail-billing-imp").prop("disabled", true);

                $("#edit1").css("display", "");
            });
        });


        window.onload = function () {
            console.log("@status  d");
            if ("@status" != "null") {
                savealt("@status")
            }

        };

        const btn = document.querySelector('#submit');
        const resetbtn = document.querySelector('#submitresetpass');
        const billingbtn = document.querySelector('#submitbilling');

        billingbtn.addEventListener('click', (event) => {

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

        resetbtn.addEventListener('click', (event) => {
            //event.preventDefault();

            Swal.fire({
                title: "Do you want Reset PAssword  Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                   // $('#resetpass').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

        btn.addEventListener('click', (event) => {
           // event.preventDefault();
            let checkboxes = document.querySelectorAll('input[name="Region"]:checked');
            let regionIds = [];
            checkboxes.forEach((checkbox) => {
                regionIds.push(checkbox.value);
            });
            document.querySelector('#regionids').value = regionIds.join(',');
            console.log(document.querySelector('#regionids').value);
            Swal.fire({
                title: "Do you want Save Changes ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Don't save`
            }).then((result) => {
                if (result.isConfirmed) {
                    //$('#profile').submit();
                }
                console.log(result);
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire("Save Changes!", "", "success");
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });

    </script>
}
