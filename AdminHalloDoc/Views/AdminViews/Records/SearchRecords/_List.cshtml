@model AdminHalloDoc.Entities.ViewModel.AdminViewModel.RecordsModel
@using static AdminHalloDoc.Entities.ViewModel.Constant;
@{
    var enumData = from RequestType e in Enum.GetValues(typeof(RequestType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var i1 = Model.SortedColumn;
    var J1 = Model.IsAscending;
}

<div class="table-responsive">
    <table id="table" class="table table-responsive mt-3 p-3 dataTable">

        <thead class=" text-start tablehead">
            <tr>
                <th scope="col">Patient Name</th>
                <th scope="col">Requestor</th>
                <th scope="col">Date Of service</th>
                <th scope="col" class="position-relative dt-orderable-asc dt-orderable-desc @(i1 == "CloseCaseDate" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('CloseCaseDate')">Close Case Date   <span class="dt-column-order"></span></th>
                <th scope="col">Email</th>
                <th scope="col">Phone number</th>
                <th scope="col">Address</th>
                <th scope="col">Zip</th>
                <th scope="col">Request Status</th>
                <th scope="col">Physician</th>
                <th scope="col">Physician Notes </th>
                <th scope="col">Cancel By Provider Note</th>
                <th scope="col">Admin Notes</th>
                <th scope="col">Patient Notes</th>
                <th scope="col">Delete Permanently</th>
            </tr>
        </thead>
        <tbody class="table-group-divider mx-5">
            @foreach (var item in Model.SearchRecordList)
            {
                <tr>
                    <td scope="col" class="table-text">@item.PatientName</td>
                    <td scope="col" class="table-text">@Enum.GetName(typeof(RequestType), item.RequestTypeID)</td>
                    <td scope="col" class="table-text">@item.DateOfService</td>
                    @if (item.CloseCaseDate != null)
                    {
                        <td scope="col" class="table-text">@item.CloseCaseDate</td>
                    }
                    else
                    {
                        <td scope="col" class="table-text">-</td>
                    }

                    <td scope="col" class="table-text">@item.Email</td>
                    <td scope="col" class="table-text">@item.PhoneNumber</td>
                    <td scope="col" class="table-text">@item.Address</td>
                    <td scope="col" class="table-text">@item.Zip</td>
                    <td scope="col" class="table-text">@Enum.GetName(typeof(Status), item.Status)</td>
                    <td scope="col" class="table-text">@item.PhysicianName</td>
                    <td scope="col" class="table-text">@item.PhysicianNote</td>
                    @if (item.CancelByProviderNote != "")
                    {
                        <td scope="col" class="table-text">@item.CancelByProviderNote</td>
                    }
                    else
                    {
                        <td scope="col" class="table-text">-</td>
                    }
                    <td scope="col" class="table-text">@item.AdminNote</td>
                    <td scope="col" class="table-text">@item.PatientNote</td>
                    <td scope="col" class="table-text">
                        <a  class="btn btn-sm btn-outline-info  mx-2 " onclick="confirmDelete('@item.RequestID')">
                            Delete
                        </a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
    <div class="d-lg-none mt-2">
        @foreach (var item in Model.SearchRecordList)
        {
            <div class="bg-info-subtle data-mobile-row" data-bs-toggle="collapse" data-bs-target="#collapseexample_@item.RequestID"
                 aria-expanded="false" aria-controls="collapseexample">
                <div class="d-flex flex-column gap-3  border-bottom border-2 pt-3 pb-5 px-3">
                    <span class="fs-5">@item.PatientName</span>
                    <span class="fs-5">@item.PhoneNumber</span>
                </div>
            </div>


            <div class="collapse " id="collapseexample_@item.RequestID">
                <div class="d-flex flex-column gap-2 bg-info-subtle border-bottom border-2  py-3 px-3 ">
                    <div class="d-flex align-items-center ">
                        <i class="fa-regular fa-user  border border-1 text-info border-info rounded-5 p-2 me-2"></i>
                        <span>Requestor: @item.PatientName</span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="fa-solid fa-calendar-days text-info border border-1 border-info rounded-5 p-2 me-2"></i>
                        <span>Date of Service: <strong>@item.DateOfService</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="fa-regular fa-envelope text-info border border-1 border-info rounded-5 p-2 me-2 "></i>
                        <span>Email: <strong>@item.Email</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-telephone text-info border border-1 border-info rounded-5 px-2 py-1 me-2 "></i>
                        <span>Phone: <strong>@item.PhoneNumber</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-geo-alt text-info border border-1 border-info rounded-5 px-2 py-1 me-2 "></i>
                        <span>Address: <strong>@item.Address</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-geo-alt text-info border border-1 border-info rounded-5 px-2 py-1 me-2  "></i>
                        <span>Zipcode: <strong>@item.Zip</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-check-lg text-info border border-1 border-info rounded-5 px-2 py-1 me-2 "></i>
                        <span>Request Status: <strong>@Enum.GetName(typeof(Status), item.Status)</strong></span>

                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="fa-solid fa-user-doctor text-info  border border-1 border-info rounded-5 p-2 me-2"></i>
                        <span>Provider: <strong>@item.PhysicianName</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-journal text-info border border-1 border-info rounded-5 px-2 py-1 me-2 "></i>
                        <span>Provider Note: <strong>@item.PhysicianNote</strong></span>
                    </div>
                    <div class="d-flex align-items-center ">
                        <i class="bi bi-journal text-info border border-1 border-info rounded-5 px-2 py-1 me-2 "></i>
                        <span>Patient Note: <strong>@item.PatientNote</strong></span>
                    </div>

                    <div class="d-flex justify-content-end">
                        <a class="btn btn-sm btn-outline-info  mx-2 " onclick="confirmDelete('@item.RequestID')">
                            Delete
                        </a>
                    </div>

                </div>
            </div>
        }
    </div>
    <nav aria-label="Page navigation example">
        <ul class="pagination pagination-container d-flex justify-content-end mx-4">

            <form id="filterFormlist" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#SearchResult"
                  asp-action="_SearchResult" asp-controller="Reports" novalidate="novalidate">

                <input type="hidden" asp-for="CurrentPage" value="@(Model.CurrentPage-1)" />
            <li class="page-item mx-1 rounded"><button type="submit" class="@(Model.CurrentPage > 1 ? "" : "disabled") dt-paging-button previous page-link" @(Model.CurrentPage > 1 ? "" : "disabled")>‹</button></li>
                @foreach (var prop in Model.GetType().GetProperties())
                {
                    @(Html.Hidden(prop.Name, prop.GetValue(Model, null)))
                }
            </form>

            @{
                int start;
                //<li class="page-item"><a class="page-link">&lt;</a></li>
                @for (start = 1; start <= @Model.TotalPages; start++)
                {
                    <form id="filterFormlist" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#SearchResult"
                          asp-action="_SearchResult" asp-controller="Reports" novalidate="novalidate">

                        <input type="hidden" asp-for="CurrentPage" value="@start" />
                    <li class="page-item mx-1 rounded"><button type="submit" class="rounded @(start == @Model.CurrentPage ? "active" : "") page-link">@start</button></li>
                        @foreach (var prop in Model.GetType().GetProperties())
                        {
                            @(Html.Hidden(prop.Name, prop.GetValue(Model, null)))
                        }
                    </form>

                }
                //<li class="page-item"><a class="page-link">&gt;</a></li>
            }

            <form id="filterFormlist" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#SearchResult"
                  asp-action="_SearchResult" asp-controller="Reports" novalidate="novalidate">

                <input type="hidden" asp-for="CurrentPage" value="@(Model.CurrentPage+1)" />
            <li class="page-item mx-1 rounded"><button type="submit" class="@(Model.CurrentPage < Model.TotalPages ? "" : "disabled") dt-paging-button previous page-link" @(Model.CurrentPage < Model.TotalPages ? "" : "disabled")>›</button></li>
                @foreach (var prop in Model.GetType().GetProperties())
                {
                    @(Html.Hidden(prop.Name, prop.GetValue(Model, null)))
                }
            </form>
        </ul>
    </nav>
    <form class="sortingform" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#SearchResult"
          asp-action="_SearchResult" asp-controller="Reports" novalidate="novalidate">
        <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
        <input type="hidden" asp-for="IsAscending" id="isAsc" />
        <input asp-for="PageSize" type="hidden" >
        <input  asp-for="SearchInput" type="hidden" >
        <input asp-for="RegionId" type="hidden" >
        <input  asp-for="RequestType" type="hidden" >
        <input  asp-for="Status" type="hidden">
        <input  asp-for="Physicianname" type="hidden" >
        <input  asp-for="Email" type="hidden" >
        <input  asp-for="Phonenumber" type="hidden">
        <input  asp-for="Patientname" type="hidden" >
        <input  asp-for="Startdate" type="hidden" >
        <input  asp-for="Enddate" type="hidden" >
        <input type="submit" class="d-none" id="foormsubmit" />
    </form>
</div>

<script>
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }

        $("#foormsubmit").click();
    }
    var deleteButtons = document.querySelectorAll('.delete');

    deleteButtons.forEach(function (button) {
        button.addEventListener('click', function (event) {
            event.preventDefault();

            var form = button.closest('.deleteform');
            var vendorIdInput = form.querySelector('input[name="venderId"]');
            var vendorId = vendorIdInput.value;

            Swal.fire({
                title: "Do you want to delete this partner?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: "No"
            }).then(function (result) {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        });
    });
</script>
<script>
    function confirmDelete(requestID) {
        Swal.fire({
            title: "Delete Request  ?",
            showDenyButton: false,
            showCancelButton: true,
            confirmButtonText: "Yes",
            denyButtonText: `Don't delete`
        }).then((result) => {
            if (result.isConfirmed) {
                console.log('/Report/Delete?RequestId=' + requestID);
                window.location.href = '/Reports/Delete?RequestId=' + requestID;
            }
        });
    }
</script>